<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard2.1</TargetFramework>
    <Nullable>enable</Nullable>
    <WarningsAsErrors>nullable</WarningsAsErrors>
    <RootNamespace>Toolbelt</RootNamespace>
    <LangVersion>10</LangVersion>
    <ImplicitUsings>enable</ImplicitUsings>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Toolbelt.FileIO" Version="1.0.0" />
  </ItemGroup>

  <PropertyGroup>
    <Version>1.1.0.1</Version>
    <GeneratePackageOnBuild Condition=" '$(Configuration)' == 'Release' ">true</GeneratePackageOnBuild>
    <Authors>J.Sakamoto</Authors>
    <PackageLicenseExpression>MPL-2.0</PackageLicenseExpression>
    <PackageProjectUrl>https://github.com/jsakamoto/Toolbelt.WorkDirectory</PackageProjectUrl>
    <PackageTags>workspace,workdir,workingdir</PackageTags>
    <PackageReleaseNotes>(Please write the package release notes in "../RELEASE-NOTES.txt")</PackageReleaseNotes>
    <PackageOutputPath>../_dist</PackageOutputPath>
    <Copyright>Copyright Â© 2021-2025 J.Sakamoto, Mozilla Public License 2.0</Copyright>
    <Description>Create a temporary working directory, copy files from a template, and finally, delete the working directory altogether when exiting a scope.</Description>
    <PackageReadmeFile>README.md</PackageReadmeFile>
    <PackageIcon>nupkg-icon.png</PackageIcon>
  </PropertyGroup>

  <ItemGroup>
    <None Include="..\README.md" Pack="True" PackagePath="\" Visible="False" />
    <None Include="..\.assets\nupkg-icon.png" Pack="true" Visible="false" PackagePath="" />
  </ItemGroup>

  <Target Name="PreparePackageReleaseNotesFromFile" BeforeTargets="GenerateNuspec">
    <ReadLinesFromFile File="../RELEASE-NOTES.txt">
      <Output TaskParameter="Lines" ItemName="ReleaseNoteLines" />
    </ReadLinesFromFile>
    <PropertyGroup>
      <PackageReleaseNotes>@(ReleaseNoteLines, '%0a');v.0.0</PackageReleaseNotes>
      <PackageReleaseNotes>$([System.Text.RegularExpressions.Regex]::Match($(PackageReleaseNotes), "^(v\.[\d\.]+.+?)v\.[\d\.]+", System.Text.RegularExpressions.RegexOptions.Singleline).Groups[1].Value)</PackageReleaseNotes>
    </PropertyGroup>
  </Target>

</Project>